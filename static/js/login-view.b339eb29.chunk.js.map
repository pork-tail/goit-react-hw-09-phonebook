{"version":3,"sources":["views/LoginView.js","views/Views.Module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["initialState","email","password","LoginView","useState","state","setState","dispatch","useDispatch","location","useLocation","handleChange","target","name","value","prev","className","styles","container","sectionTitle","form","onSubmit","e","preventDefault","login","autoComplete","lable","title","input","type","onChange","btn","pathname","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"uOAMMA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAgDGC,UA7CG,WAChB,MAA0BC,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACXC,EAAWC,cACXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCR,GAAS,SAACS,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAOC,QAQzC,OACE,sBAAKE,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOE,aAAtB,mGACA,uBAAMH,UAAWC,IAAOG,KAAMC,SATb,SAACC,GACpBA,EAAEC,iBACFhB,EAASiB,YAAMnB,IACfC,EAAS,CAAEO,KAAM,GAAIZ,MAAO,GAAIC,SAAU,MAMcuB,aAAa,MAAnE,UACE,wBAAOT,UAAWC,IAAOS,MAAzB,UACE,sBAAMV,UAAWC,IAAOU,MAAxB,4CACA,uBACEX,UAAWC,IAAOW,MAClBC,KAAK,QACLhB,KAAK,QACLC,MAAOT,EAAMJ,MACb6B,SAAUnB,OAGd,wBAAOK,UAAWC,IAAOS,MAAzB,UACE,sBAAMV,UAAWC,IAAOU,MAAxB,kDACA,uBACEX,UAAWC,IAAOW,MAClBC,KAAK,WACLhB,KAAK,WACLC,MAAOT,EAAMH,SACb4B,SAAUnB,OAGd,wBAAQkB,KAAK,SAASb,UAAWC,IAAOc,IAAxC,SACyB,kBAAtBtB,EAASuB,SAA+B,WAAa,kB,mBChDhEC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,0BAA0B,MAAQ,0BAA0B,aAAe,wBAAwB,KAAO,0BAA0B,MAAQ,0BAA0B,MAAQ,0BAA0B,IAAM,4B,8ECGnQ,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGlC,QAETuB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/login-view.b339eb29.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { login } from \"../redux/auth/auth.operations\";\nimport styles from \"./Views.Module.css\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst LoginView = () => {\n  const [state, setState] = useState(initialState);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const handleChange = ({ target: { name, value } }) => {\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(state));\n    setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.sectionTitle}>Страница логина</h2>\n      <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <lable className={styles.lable}>\n          <span className={styles.title}>Почта</span>\n          <input\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            value={state.email}\n            onChange={handleChange}\n          ></input>\n        </lable>\n        <lable className={styles.lable}>\n          <span className={styles.title}>Пароль</span>\n          <input\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            value={state.password}\n            onChange={handleChange}\n          ></input>\n        </lable>\n        <button type=\"submit\" className={styles.btn}>\n          {location.pathname === \"/registration\" ? \"REGISTER\" : \"LOGIN\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3POsMs-iKScH2CiI3t2S0u\",\"heroTitle\":\"_2mR6S--FqHAXYtALGqoyEb\",\"lable\":\"_1ucvGrYt9_hQsaoSlsfY_3\",\"sectionTitle\":\"zUnct1YUBYgHlDehVFegr\",\"form\":\"_251TE3bH8ADhCq_aB7uOUq\",\"input\":\"_2CWc4Rrc5pvi_9vYlLBS2H\",\"title\":\"_2Eobs2gMRNMqZRonQceM-i\",\"btn\":\"_318suTydcCodsVC4kCArMs\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}